{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","React","createElement","className","alt","src","concat","CardList","robots","cardComponent","map","user","i","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","Component","constructor","super","onSearchChange","event","this","setState","searchfield","target","value","state","componentDidMount","fetch","then","response","json","users","render","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"sMAceA,MAZFC,IAA0B,IAAzB,KAAEC,EAAI,MAAEC,EAAK,GAAEC,GAAIH,EAC/B,OACEI,IAAAC,cAAA,OAAKC,UAAU,uDACbF,IAAAC,cAAA,OAAKE,IAAI,SAASC,IAAG,wBAAAC,OAA0BN,EAAE,aACjDC,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAKJ,GACLG,IAAAC,cAAA,SAAIH,MCSGQ,MAdEV,IAAiB,IAAhB,OAAEW,GAAQX,EAC1B,MAAMY,EAAgBD,EAAOE,IAAI,CAACC,EAAMC,IAEpCX,IAAAC,cAACN,EAAI,CACHiB,IAAKD,EACLZ,GAAIQ,EAAOI,GAAGZ,GACdF,KAAMU,EAAOI,GAAGd,KAChBC,MAAOS,EAAOI,GAAGb,SAIvB,OAAOE,IAAAC,cAAA,WAAMO,ICCAK,MAbGjB,IAAuB,IAAtB,aAAEkB,GAAclB,EACjC,OACEI,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,SACEC,UAAU,mCACVa,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCOHI,MAdCC,GAEZnB,IAAAC,cAAA,OACEmB,MAAO,CACLC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,UAGTJ,EAAMK,U,MCLb,MAAMC,UAAYC,YAChBC,cACEC,QAAQ,KAiBVC,eAAkBC,IAChBC,KAAKC,SAAS,CAAEC,YAAaH,EAAMI,OAAOC,SAjB1CJ,KAAKK,MAAQ,CACX7B,OAAQ,GACR0B,YAAa,IAIjBI,oBACEC,MAAM,8CACHC,KAAMC,GACEA,EAASC,QAEjBF,KAAMG,IACLX,KAAKC,SAAS,CAAEzB,OAAQmC,MAO9BC,SACE,MAAM,OAAEpC,EAAM,YAAE0B,GAAgBF,KAAKK,MAC/BQ,EAAiBrC,EAAOsC,OAAQC,GAC7BA,EAAMjD,KAAKkD,cAAcC,SAASf,EAAYc,gBAEvD,OAAQxC,EAAO0C,OAGbjD,IAAAC,cAAA,OAAKC,UAAU,MACbF,IAAAC,cAAA,MAAIC,UAAU,MAAK,eACnBF,IAAAC,cAACY,EAAS,CAACC,aAAciB,KAAKF,iBAC9B7B,IAAAC,cAACiB,EAAM,KACLlB,IAAAC,cAACK,EAAQ,CAACC,OAAQqC,MANtB5C,IAAAC,cAAA,UAAI,YAaKwB,QCnCAyB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,KAAK3C,IAAkD,IAAjD,OAAEyD,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAS7D,EACpEyD,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,M,MCADO,IAASC,WAAWC,SAASC,eAAe,SACpDlB,OACH3C,IAAAC,cAACD,IAAM8D,WAAU,KACf9D,IAAAC,cAACwB,EAAG,QAORyB,K","file":"static/js/main.932ca39c.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n      <img alt=\"robots\" src={`https://robohash.org/${id}?200x20`}></img>\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n  const cardComponent = robots.map((user, i) => {\n    return (\n      <Card\n        key={i}\n        id={robots[i].id}\n        name={robots[i].name}\n        email={robots[i].email}\n      />\n    );\n  });\n  return <div>{cardComponent}</div>;\n};\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div\n      style={{\n        overflowY: 'scroll',\n        border: '1px solid black',\n        height: '800px',\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => {\n        return response.json();\n      })\n      .then((users) => {\n        this.setState({ robots: users });\n      });\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value });\n  };\n  render() {\n    const { robots, searchfield } = this.state;\n    const filteredRobots = robots.filter((robot) => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    });\n    return !robots.length ? (\n      <h1>Loading</h1>\n    ) : (\n      <div className=\"tc\">\n        <h1 className=\"f2\">RoboFriends</h1>\n        <SearchBox searchChange={this.onSearchChange} />\n        <Scroll>\n          <CardList robots={filteredRobots} />\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}